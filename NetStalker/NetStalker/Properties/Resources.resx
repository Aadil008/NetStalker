<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Agreement" xml:space="preserve">
    <value>The information contained on NetStalker Desktop app (the "Service") is for general information purposes only.

I (The developer) assumes no responsibility for errors or omissions in the contents on the Service.

In no event I shall be liable for any special, direct, indirect, consequential, or incidental damages or any damages whatsoever, whether in an action of contract, negligence or other sort, arising out of or in connection with the use of the Service or the contents of the Service.

I can not warrant that the application is free of harmful components.

This software is working and tested on my machine, I can not guarantee that it will work on your machine.

In case you decided to use this software, I recommend taking some of your time to read the help section in order to use this software properly.</value>
  </data>
  <data name="AppQuit" xml:space="preserve">
    <value>Quit the application ?</value>
  </data>
  <data name="AppWillQuit" xml:space="preserve">
    <value>The application needs to restart in order to apply the new changes, continue?
If you chose not to quit, the changes might not be fully applied until the next run.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="color_cancel" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\color_cancel.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="color_error" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\color_error.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="color_help" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\color_help.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="color_info" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\color_info.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="color_ok" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\color_ok.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DeviceNotFound" xml:space="preserve">
    <value>The selected device was not found in the list or targets</value>
  </data>
  <data name="FriendlyNameCharLimit" xml:space="preserve">
    <value>Name cannot be longer than 20 characters!</value>
  </data>
  <data name="FriendlyNameEmpty" xml:space="preserve">
    <value>"Name cannot be empty!</value>
  </data>
  <data name="HelpBubble" xml:space="preserve">
    <value>Spoof Protection occurs whenever a blocking or a redirection operation is active.
It protects you pc from being blocked or redirected by the same tool
or any other spoofing software.</value>
  </data>
  <data name="HelpText" xml:space="preserve">
    <value>Some guidelines on how to use this software properly:

1- In order to use the Packet Sniffer you have to activate redirection for the selected device first. Note: For the Packet Sniffer to work properly, redirection and speed limitation will be deactivated for all but the selected device.
2- In order to use the Speed Limiter you have to activate redirection for the selected device, once activated it will start redirecting packets for the selected device with no speed limitation, then you can open the speed limiter (on the bottom right) and set the desired speed for each device (0 means no limitation).
3- Blocking and redirection can not be activated at the sametime, you either block a device or limit its speed.
4- It's recommended for most stability to wait until the scanner is done before performing any action.
5- NetStalker can be protected with a password, and can be set or removed via Options.
6- NetStalker is available in dark and light modes.
7- NetStalker has an option for spoof protection, if activated it can prevent your pc from being redirected or blocked by the same tool or any other spoofing software.
8- Background scanning is always active so you don't have to consistently press scan to discover newly connected devices.</value>
  </data>
  <data name="icons8_ok_red" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\icons8-ok-red.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="LimiterDeviceNotReady" xml:space="preserve">
    <value>Choose a device first and activate redirection for it!</value>
  </data>
  <data name="MustRedirectFirst" xml:space="preserve">
    <value>Redirection must be active for this device!</value>
  </data>
  <data name="NewTargetNotificationPrompt" xml:space="preserve">
    <value>A new device detected!</value>
  </data>
  <data name="NoGatewayOrOwnDevice" xml:space="preserve">
    <value>This operation can not target the gateway or your own ip address!</value>
  </data>
  <data name="NoLimiterWhileSniffer" xml:space="preserve">
    <value>The Speed Limiter can't be used while the sniffer is active!</value>
  </data>
  <data name="NotificationsPrompt" xml:space="preserve">
    <value>Do you want me to inform you of newly connected devices?
(This option can be changed back in the options menu)</value>
  </data>
  <data name="OpFailed" xml:space="preserve">
    <value>Operation failed!</value>
  </data>
  <data name="RefreshScanNotActive" xml:space="preserve">
    <value>In order to do a refresh, the scanner must be active and no other operations are in progress.</value>
  </data>
  <data name="ScanStillInProgress" xml:space="preserve">
    <value>A scan is still in progress, please wait until its finished.</value>
  </data>
  <data name="SelectDevice" xml:space="preserve">
    <value>Select a device first!</value>
  </data>
  <data name="SnifferHelp" xml:space="preserve">
    <value>1- In order to begin capturing packets click on START.
2- You can clear the list from items by pressing CLEAR.
3- You can save the captured packets in a form of a log file by stopping the ongoing operation, pressing EXPORT and choosing a location for the file to be saved.
4- In order to open a chosen packet do a right click on the selected packet and click \"Show Packet\" and it will be displayed in the packet viewer on the bottom left of the window.
5- To resolve the destination ip in HTTPS Packets just click the Resolve button for the requested row.
6- Hint: its useful to resolve the destination IPs before exporting the content of the list in order to include more information in the log file.</value>
  </data>
  <data name="SnifferLimiterStillActive" xml:space="preserve">
    <value>The Packet Sniffer can't be used while the limiter is active!</value>
  </data>
  <data name="spinB" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\spinB.gif;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="spinW" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\spinW.gif;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>